// Code generated by protoc-gen-go. DO NOT EDIT.
// source: qr/transport/pb/qr.proto

/*
Package pb is a generated protocol buffer package.

It is generated from these files:
	qr/transport/pb/qr.proto

It has these top-level messages:
	GenerateRequest
	GenerateResponse
*/
package pb

import proto "github.com/golang/protobuf/proto"
import fmt "fmt"
import math "math"

import (
	context "golang.org/x/net/context"
	grpc "google.golang.org/grpc"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.ProtoPackageIsVersion2 // please upgrade the proto package

type GenerateRequest struct {
	Data  string `protobuf:"bytes,1,opt,name=data" json:"data,omitempty"`
	Level int32  `protobuf:"varint,2,opt,name=level" json:"level,omitempty"`
	Size  int32  `protobuf:"varint,3,opt,name=size" json:"size,omitempty"`
}

func (m *GenerateRequest) Reset()                    { *m = GenerateRequest{} }
func (m *GenerateRequest) String() string            { return proto.CompactTextString(m) }
func (*GenerateRequest) ProtoMessage()               {}
func (*GenerateRequest) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{0} }

func (m *GenerateRequest) GetData() string {
	if m != nil {
		return m.Data
	}
	return ""
}

func (m *GenerateRequest) GetLevel() int32 {
	if m != nil {
		return m.Level
	}
	return 0
}

func (m *GenerateRequest) GetSize() int32 {
	if m != nil {
		return m.Size
	}
	return 0
}

type GenerateResponse struct {
	Image []byte `protobuf:"bytes,1,opt,name=image,proto3" json:"image,omitempty"`
}

func (m *GenerateResponse) Reset()                    { *m = GenerateResponse{} }
func (m *GenerateResponse) String() string            { return proto.CompactTextString(m) }
func (*GenerateResponse) ProtoMessage()               {}
func (*GenerateResponse) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{1} }

func (m *GenerateResponse) GetImage() []byte {
	if m != nil {
		return m.Image
	}
	return nil
}

func init() {
	proto.RegisterType((*GenerateRequest)(nil), "pb.GenerateRequest")
	proto.RegisterType((*GenerateResponse)(nil), "pb.GenerateResponse")
}

// Reference imports to suppress errors if they are not otherwise used.
var _ context.Context
var _ grpc.ClientConn

// This is a compile-time assertion to ensure that this generated file
// is compatible with the grpc package it is being compiled against.
const _ = grpc.SupportPackageIsVersion4

// Client API for QR service

type QRClient interface {
	Generate(ctx context.Context, in *GenerateRequest, opts ...grpc.CallOption) (*GenerateResponse, error)
}

type qRClient struct {
	cc *grpc.ClientConn
}

func NewQRClient(cc *grpc.ClientConn) QRClient {
	return &qRClient{cc}
}

func (c *qRClient) Generate(ctx context.Context, in *GenerateRequest, opts ...grpc.CallOption) (*GenerateResponse, error) {
	out := new(GenerateResponse)
	err := grpc.Invoke(ctx, "/pb.QR/Generate", in, out, c.cc, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

// Server API for QR service

type QRServer interface {
	Generate(context.Context, *GenerateRequest) (*GenerateResponse, error)
}

func RegisterQRServer(s *grpc.Server, srv QRServer) {
	s.RegisterService(&_QR_serviceDesc, srv)
}

func _QR_Generate_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(GenerateRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(QRServer).Generate(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/pb.QR/Generate",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(QRServer).Generate(ctx, req.(*GenerateRequest))
	}
	return interceptor(ctx, in, info, handler)
}

var _QR_serviceDesc = grpc.ServiceDesc{
	ServiceName: "pb.QR",
	HandlerType: (*QRServer)(nil),
	Methods: []grpc.MethodDesc{
		{
			MethodName: "Generate",
			Handler:    _QR_Generate_Handler,
		},
	},
	Streams:  []grpc.StreamDesc{},
	Metadata: "qr/transport/pb/qr.proto",
}

func init() { proto.RegisterFile("qr/transport/pb/qr.proto", fileDescriptor0) }

var fileDescriptor0 = []byte{
	// 178 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0xe2, 0x92, 0x28, 0x2c, 0xd2, 0x2f,
	0x29, 0x4a, 0xcc, 0x2b, 0x2e, 0xc8, 0x2f, 0x2a, 0xd1, 0x2f, 0x48, 0xd2, 0x2f, 0x2c, 0xd2, 0x2b,
	0x28, 0xca, 0x2f, 0xc9, 0x17, 0x62, 0x2a, 0x48, 0x52, 0xf2, 0xe7, 0xe2, 0x77, 0x4f, 0xcd, 0x4b,
	0x2d, 0x4a, 0x2c, 0x49, 0x0d, 0x4a, 0x2d, 0x2c, 0x4d, 0x2d, 0x2e, 0x11, 0x12, 0xe2, 0x62, 0x49,
	0x49, 0x2c, 0x49, 0x94, 0x60, 0x54, 0x60, 0xd4, 0xe0, 0x0c, 0x02, 0xb3, 0x85, 0x44, 0xb8, 0x58,
	0x73, 0x52, 0xcb, 0x52, 0x73, 0x24, 0x98, 0x14, 0x18, 0x35, 0x58, 0x83, 0x20, 0x1c, 0x90, 0xca,
	0xe2, 0xcc, 0xaa, 0x54, 0x09, 0x66, 0xb0, 0x20, 0x98, 0xad, 0xa4, 0xc1, 0x25, 0x80, 0x30, 0xb0,
	0xb8, 0x20, 0x3f, 0xaf, 0x38, 0x15, 0xa4, 0x3b, 0x33, 0x37, 0x31, 0x3d, 0x15, 0x6c, 0x24, 0x4f,
	0x10, 0x84, 0x63, 0x64, 0xcb, 0xc5, 0x14, 0x18, 0x24, 0x64, 0xce, 0xc5, 0x01, 0x53, 0x2f, 0x24,
	0xac, 0x57, 0x90, 0xa4, 0x87, 0xe6, 0x1c, 0x29, 0x11, 0x54, 0x41, 0x88, 0x91, 0x4a, 0x0c, 0x49,
	0x6c, 0x60, 0x4f, 0x18, 0x03, 0x02, 0x00, 0x00, 0xff, 0xff, 0xa0, 0x53, 0xb8, 0xe3, 0xe0, 0x00,
	0x00, 0x00,
}
